%script
  ="var cant_args_add = #{@arguments.count};"
  
%h1{:style=>"width:80%; float: left;"}
  =_('Edit Function')

%h2{:style=>"float:right;width:20%;text-align: right;"}
  =_('Project')
  = (@user_function.project_id !=0) ? truncate(@user_function.project.name.capitalize , :ommision => "...", :length => 30) : _('Generals')  

#checker{:style=>"display:none; "}

.form{:style=>" margin-left:30px; margin-top:20px;clear:both;"}
  -remote_form_for @user_function, :url => { :controller => "user_functions",:action => 'update', :id => @user_function.id}, :html=>{:id=>"form_edit_free"} do |f|
    = error_messages_for :user_function
    #errors

    %div{ :style => "-moz-background-inline-policy:continuous;-moz-border-radius:10px 10px 10px 10px;border:1px solid #C3C3C3;padding:15px 20px;" }   
      //Last update:  Verified if another user has edited the function
      =f.text_field :last_updated_at, {:id=>"last_updated_at", :style=>"display:none;", :value=>@user_function.updated_at.to_s}
      //Name
      %label{:for => "name" } 
        =_('Name')
        %br
        =f.text_field :name, {:size => 28, :maxlength => 50 ,:onblur=>"document.getElementById('function_head').innerHTML='Def ' + this.value;has_changed();"}
      %br
      //Description
      %label{:for => "description"} 
        =_('Description')
        %br
        =f.text_area :description, {:rows => 6, :style => "width:60%", :onchange=>"has_changed();"}
      %br
      //Chekcs
      -if(@user_function.project_id != 0)
        %label{:for => "visibility",  :title=>_("The function can not be used by all users")} 
          -value = @user_function.visibility ? "" : "checked"
          =f.check_box :visibility, {:checked=>value,:onchange=>"has_changed();"}, checked_value = "0", unchecked_value = "1"
          =_('Private use')
      %label{:for => "hide", :title=>_("Will hide the code and the example of the function")} 
        -value = @user_function.hide ?  "checked" :  ""
        =f.check_box :hide,  {:checked=>value,:onchange=>"has_changed();"}
        =_('Hide the code of the function')
      %label{:for => "native_params", :title=>_('Using arguments as strings')} 
        -value = @user_function.native_params ?  "" : "checked" 
        =f.check_box :native_params, {:checked=>value,:onchange=>"has_changed();"}
        =_('Using arguments as strings')
      %br
      //Arguments 
      %label{:for => "cant_args"}
        =image_tag 'icons/add_blue.gif', :alt=>'add_blue.gif', :title=>_('New'), :onClick => "add_argument();has_changed();", :style=>"cursor:pointer; width:15px; height:15px;"
        =_('Arguments')
        %br
        #div_arguments_table
          %table{:id => 'arguments_table'}
            - n = 0
            -@arguments.each do |argument|
              %tr{ :id => "row_"+ n.to_s}
                %td
                  %input{ :id => "user_function_args_" + n.to_s, :name => "user_function[args][#{n}]", :value => argument,:onchange=>"has_changed();"}
                %td
                  %img{:name => "row_" + n.to_s, :src => "/images/icons/cross.png", :alt => "cross.png", :style => "cursor:pointer; height:12px; width:12px; margin-left:10px;", :onClick => "eliminarArgument(this.name);has_changed();"}
              -n += 1
            //Add the number of arguments it has the function
            %script
              cant_args_add = #{n};
      %br
      //Code
      %label{:for => "source_code"}
        =_('Code')
        =image_tag "icons/s-edit.png",:id=>"pencil_icon",:alt=>"s-edit.png",:style => "display:none;"
      .tab_container{:style=>"width:95%; height:600px;padding-bottom:0;"}
        %div{:id => "function_head"}
          Def
          =@user_function.name
        %input{ :type => "hidden", :name => "content",         :value => "" }
        %textarea{ :id=>"scriptTextArea", :style=>"width:100%; height:335px;"}
          =@source_code.gsub("\r\n","\r").gsub("\n\r","\r").gsub("\n","\r") if @source_code
        =f.hidden_field :code, :value => ""
        End
      %br
      %br
      %label{:for => "example"} 
        =_('Example')
        %br
        =f.text_area :example, {:rows => 4, :style => "width:60%;"}
      %br
      %br 
    %b
      =_('Last modified by the user')
      \:
    =truncate(@last_modifier.name, :ommision => "...", :length => 30)
    %br
    %br

//Tools menu
-content_for :tools_menu do
  =image_tag("/images/icons/save.png",:alt=>"save",:title =>_("Save"),:onclick => "sendContent();$j('#form_edit_free').trigger('onsubmit');",:style => "margin-right:10px;cursor:pointer;display:none;", :id=>"save_button")

  //Sintax check
  =link_to_remote image_tag("/images/icons/bug.png", :alt=>"syntax check", :title=>_('Syntax Check'), :style=>"align: left;border: none;display: inline;"), :url => {:controller => "circuits", :action => "checkit"},:with=>"'code='+encodeURIComponent(encode_text( script_content.getValue() ))", :update => "checker", :complete => "document.getElementById('checker').toggle();", :method => :post

  //Versions
  #versions{:style=>'display:inline;'}
    =render :partial =>'versions'


= render :partial=> "circuits/script_editor", :locals => { :id=>"scriptTextArea", :readonly=>@readonly }

