%script
  ="var cant_args_add = #{@arguments.count};"

%h1
  =_('New Function')
  
#checker{:style=>"display:none; "}

.form{:style=>" margin-left:30px; margin-top:20px;"}
  -remote_form_for @user_function, :url => { :controller => "user_functions",:action => 'create'},  :html=>{:id=>"form_new"} do |f|
    = error_messages_for :user_function
    #errors

    %div{ :style => "-moz-background-inline-policy:continuous;-moz-border-radius:10px 10px 10px 10px;border:1px solid #C3C3C3;padding:15px 20px;" }
      =f.text_field :project_id, {:style => "display:none;"}
      //Name
      %label{:for => "name" } 
        =_('Name')
        %br
        =f.text_field :name, {:size => 28, :maxlength => 50,:onblur=>"document.getElementById('function_head').innerHTML='Def ' + this.value"}
      %br
      //Description
      %label{:for => "description"} 
        =_('Description')
        %br
        =f.text_area :description, {:rows => 6, :style => "width:60%;"}
      %br
      //Checks
      -if(@project_id != 0)
        %label{:for => "visibility",  :title=>_("The function can not be used by all users")}  
          -value = FUNCTION_PRIVATED_DEFAULT ? 'checked' : ''
          =f.check_box :visibility, {:checked=>value}, checked_value = "0", unchecked_value = "1"
          =_('Private use')
      %label{:for => "hide", :title=>_("Will hide the code and the example of the function")} 
        -value = FUNCTION_HIDE_DEFAULT ? 'checked' : ''
        =f.check_box :hide, { :checked=> value}
        =_('Hide the code of the function')
      %br
      //Arguments
      %label{:for => "cant_args"}
        =image_tag 'icons/add_blue.gif', :alt=>'add_blue.gif', :title=>_('New'), :onClick => "add_argument();", :style=>"cursor:pointer; width:15px; height:15px;"
        =_('Arguments')
        %br
        #div_arguments_table
          %table{:id => 'arguments_table'}
            - n = 0
            -@arguments.each do |argument|
              %tr{ :id => "row_"+ n.to_s}
                %td
                  %input{ :id => "user_function_args_input_" + n.to_s, :name => "user_function[args][input_#{n}]", :value => argument}
                %td
                  %img{:name => "row_" + n.to_s, :src => "/images/icons/cross.png", :alt => "cross.png", :style => "cursor:pointer; height:12px; width:12px; margin-left:10px;", :onClick => "eliminarArgument(this.name);"}
              -n += 1
            //Add the number of arguments it has the function
            %script
              cant_args_add = #{n};
      %br
      //Code
      %label{:for => "source_code"}
        =_('Code')
      .tab_container{:style=>"width:95%; height:600px;padding-bottom:0;"}
        %div{:id => "function_head"}
          Def
        %input{ :type => "hidden", :name => "content",:value => "" }
        %textarea{ :id=>"scriptTextArea",}
          =@source_code.gsub("\r\n","\r").gsub("\n\r","\r").gsub("\n","\r") if @source_code
        =f.hidden_field :code, :value => ""
        End
      %br
      %br
      %label{:for => "example"} 
        =_('Example')
        %br
        =f.text_area :example, {:rows => 4, :style => "width:60%;"}
      %br
      %br


//Tools menu
-content_for :tools_menu do
  =image_tag("/images/icons/save.png",:alt=>"save",:title =>_("Save"),:onclick => "changed_flag=false;sendContent();$j('#form_new').trigger('onsubmit');",:style => "margin-right:10px;cursor:pointer;")

  //Sintax check
  =link_to_remote image_tag("/images/icons/bug.png", :alt=>"syntax check", :title=>_('Syntax Check'), :style=>"align: left;border: none;display: inline;"), :url => {:controller => "circuits", :action => "checkit"},:with=>"'code='+encodeURIComponent(encode_text( script_content.getValue() ))", :update => "checker", :complete => "document.getElementById('checker').toggle();", :method => :post

= render :partial=> "circuits/script_editor", :locals => { :id=>"scriptTextArea", :readonly=>@readonly }
