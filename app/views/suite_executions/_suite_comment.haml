.tag{:id => "suite_comment_popup", :name => "execution_config", :style=>"height:70%; width:70%; padding-bottom:10px;left: 15%;"}
  =render :partial =>"layouts/popup_header", :locals=>{:element =>"suite_comment_popup"} 
  %div
    %h2
      =_("Select Cases to Run")
      =_("in Suite Execution")
      %input{:type => "button", :value => "Ok", :id => "save_comment", :style => "float:right;margin-right:20px;", :onClick => "addFormCaseCommentIds();"}

    %select{ :id=>'select_circuits', :onChange=>"showCircuit();", :style=>"width:200px;margin-left:30px;float:left;margin-top:20px;"}
      %option{ :label => "none", :selected => _("-Select any Script-"), :value => _("-Select any Script-") }
        =_("Select any Script")
        
      -@circuits.each do |circuit|
        %option{ :id=>circuit.name, :label => circuit.name, :value => circuit.id, :title=>circuit.name}
          =truncate(circuit.name,:ommision => "...", :length =>40)

  .circuits{:id=>"circuits_suite", :style=>" margin: 0 auto;clear:both;height:70%;overflow:auto;"}
    %input{ :type => "hidden", :name => "suite_id", :value => @suite.id}
    //SCRIPTS DIVS
    -@circuits.each do |circuit|
      .div_circuit_cases{:id => 'div_circuit_' + circuit.id.to_s, :name=>"div_circuit",:style => "display:none;overflow: auto;"}
        -if suite_cases(circuit,@suite.case_templates).empty?
          %i{:style => 'color:#8f8f8f; font-size: 12px;'}
            =_("Script without cases")
        -else
          //Script Divs with broken relations
          .div_circuit_relations{:id => 'div_relation_broken_' + circuit.id.to_s, :style => "display:none; font-size:12px;color:#FF3333;overflow:hidden;padding:0px 10px;margin-bottom:10px;"}
            %b{:style=>"color:#FF3333; text-decoration:underline; margin-top:10px;"}
              =_("Broken Relations")
            %i{:style => "color:#FF3333;"}
              =_("Comented case sent data to the following cases:")
            %div{:style=>"margin-top:10px;font-weight:bold;clear:both;"}
              %div{:style=>"float:left; width:200px;"}
                =_("Case Source:")
              %div{:style=>"float:left; width:200px;"}
                =_("Case Destination:")
            //Obtain all script cases from suite
            //hash Format:{circuit.id => [case1, case2, ...]}
            -@suite_circuit_cases[circuit.id].each do |ct|
              //Format:{caso_origen.id => [SuiteCasesRelation1, SuiteCasesRelation2, ...]}
              -@case_relations[ct.id].each do |suite_case_relation|
                .broken_relation{:name=>'broken_' + circuit.id.to_s + '_' + ct.id.to_s, :style=>"display:none;clear:both;"}
                  %div{:style=>"float:left; width:200px;"}
                    =truncate(ct.circuit.name,:ommision => "...", :length =>30)
                    \:
                    = ct.id
                  %div{:style=>"float:left; width:200px;"}
                    =truncate(@circuit_case[suite_case_relation.case_destination],:ommision => "...", :length =>30)
                    \:
                    =suite_case_relation.case_destination

          //Script cases
          =render :partial => '/case_templates/data_set', :locals=>{ :circuit => circuit, :circuit_case_columns=>@suite_circuits_data[circuit.id],  :case_template_columns=>case_template_columns, :case_templates=>suite_cases(circuit,@suite.case_templates)}  

  %div{:style=>"clear:both"} 







