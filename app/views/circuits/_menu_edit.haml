//Tools menu
-content_for :tools_menu do

  //Save
  -if @readonly
    =image_tag("/images/icons/d_save.png",:alt=>"save",:title=>_("Without Edit Permissions "), :onclick=>"alert('#{_("You do not have Edit Permissions")}')",:style=>" height: 23px; width: 23px;margin-left:35px;")

  -else
    =link_to_remote image_tag('icons/save.png', :alt=>'save', :title =>_("Save"), :id =>'save_button', :style=>'display:none;'), :method=>:put, :url=>project_circuit_path(@circuit.project_id, @circuit), :with => "'content=' + encodeURI( encode_text( script_content.getValue()) ) + '&last_updated_at=' + encodeURI($j(\'#last_updated_at\').val())"
    
  //Sintax check  
  =link_to_remote image_tag("/images/icons/bug.png", :alt=>"sintax check", :title=>_('Sintax Check')), :url => {:controller => "circuits", :circuit_id=>@circuit.id, :project_id=>@circuit.project_id, :action => "checkit"},:with=>"'code='+encodeURIComponent(encode_text( script_content.getValue() ))", :update => "checker", :complete => "document.getElementById('checker').show();", :method => :post
  
  //Data recovery
  =image_tag("/images/icons/recovery.png",:alt=>"recovery",:title =>_("Data Recovery"),:onClick => remote_function(:complete => "document.getElementById('div_data_recoveries').show();",:update => "div_data_recoveries",  :method => "get",  :url=>project_circuit_data_recovery_names_path(@project_id,@circuit)))

  #versions{:style=>'display:inline;'}
    =render :partial =>'versions'
    
  //Export
  =image_tag("/images/icons/import.png",:alt=>"export",  :title=>_('Export Script'),:onclick=>"$j('#import_circuit').show();")
  
  //Functions
  -if !@readonly
    =link_to_function image_tag("/images/icons/functions.png",     	 :title=>_('Functions'), :alt=>"functions"), 				:onclick => remote_function(:complete => "$j('#div_with_functions').show();", :update => "div_with_functions", :url => "/user_functions/find")
    
  //Script in suite
  =image_tag("icons/suiteq.png", :alt=>"suite_min.png", :title=>_('Suites containing this script'),  :onClick => remote_function(:complete => "$j('#suites_of_script').show();",:update => "suites_of_script",  :method => "get",  :url => { :controller => :circuits , :action => :get_suites_of_script, :id => @circuit.id }) )
   
  //Ruby
  =link_to image_tag("/images/icons/ruby.png",:alt=>"ruby"), help_path(3) , :title=>_('Ruby Help') , :popup => true

  //Info
  =image_tag( "/images/icons/info.png", :alt=>"info",:title=>_('Information'),   :onClick => "$j('#infoCircuit').show();", :style=>"padding-right:20px;border-right: 1px solid #C6C5C4;")

  //Panel Execution

  //History 
  =image_tag( "/images/icons/clock.png",:alt=>"clock.png", :title=>_('Execution History'), :onClick => "location.href='/suite_executions?[filter][model]=scripts&[filter][suite_id]=0&[filter][circuit_id]=#{@circuit.id}&[filter][case_id]=' + $j('#cases_id').val() ;")
    
  //Execution Config
  =image_tag("/images/icons/config.png",  :alt=>"config.png", :title=>_('Execution Panel'),:onClick => remote_function(:complete => "document.getElementById('execution_panel').show();", :update => "execution_panel", :url => "/context_configurations/user_context_configuration_values"))

  %div{ :style=>"margin:auto;width:300px;display:inline;padding-left:10px;"}
    //Cases
    -cases =[[_("Without Cases"), ""]] + @circuit.case_templates.active.collect{|c| [ truncate(c.objective.capitalize, :ommision => "...", :length => 70), c.id ]}
    -value =  @execution_running? @execution_running.case_template_id : ""
    =select("cases", "id",  cases ,{:selected => value},{:style => "width:150px;vertical-align:9px;"})

    //Ejecution
    //Play
    -if @execution_running
      //If there are changes, it is saved and executed, if not, just run
      =image_tag "/images/icons/play.png", :alt=>"play",:title=>_('Run'), :id=>"play_#{@execution_running.id}",  :style=>"margin-bottom:3px;", :onClick => "if(!changed_flag){location='/suite_executions/create?case_template_id=' +  $j('#cases_id').val() + '&where_did_i_come=circuits_edit&project_id=#{@project_id}&circuit_id=#{@circuit.id}'}else{" + remote_function(:method=>:put, :url=>project_circuit_path(@circuit.project_id, @circuit), :with => "'content=' + encodeURI( encode_text( script_content.getValue()) ) + '&last_updated_at=' + encodeURI($j(\'#last_updated_at\').val()) + '&and_play=true'") + "}"
      //stop
      =#link_to(image_tag("/images/icons/stop.png",:alt=>"stop",:title=>_('Stop'),:id=>"stop_#{@execution_running.id}",:style=>"margin-bottom:2px;"), suite_execution_path(@execution_running.suite_execution_id), :method=>:delete) 
      //Status
      %div{:id=>"status_#{@execution_running.id}", :style=>"margin:auto;vertical-align:2px;display:inline;"}
        =render :partial=>'execution', :locals=> {:execution=>@execution_running}
      //Status refresh 
      =periodically_call_remote(:url => {:controller=>:executions, :action => :show, :id =>  @execution_running.id}, :method=>:get, :condition => "ejecucion_completa_#{@execution_running.id} == false", :frequency => 8)
    -else
      //If there are changes, it is saved and executed, if not, just run
      =image_tag( "/images/icons/play.png", :alt=>"play",:title=>_('Run'),  :style=>"margin-bottom:3px;", :onClick => "if(!changed_flag){location='/suite_executions/create?case_template_id=' +  $j('#cases_id').val() + '&where_did_i_come=circuits_edit&project_id=#{@project_id}&circuit_id=#{@circuit.id}' }else{" + remote_function(:method=>:put, :url=>project_circuit_path(@circuit.project_id, @circuit), :with => "'content=' + encodeURI( encode_text( script_content.getValue()) )", :success=> "changed_flag=false;location='/suite_executions/create?case_template_id=' +  $j('#cases_id').val() + '&where_did_i_come=circuits_edit&project_id=#{@project_id}&circuit_id=#{@circuit.id}'") + "}" )

  //Queue observer
  =render :partial => "queue_observers/queue_icon"
  %div{ :style=>"clear: both"}

//Import script
=render :partial => "import_script"

//Data recovery
#div_data_recoveries{:style=>"display:none;"}

//Functions
#div_with_functions{:style=>"display:none;"}

//Check data
#checker{:style=>"display:none;"}

//Suites of script
#suites_of_script{:style=>"display:none;"}

//Execution pannel
.div{:id=>"execution_panel",:style => "display:none; "}
  
//Help 
=render :partial => "info_script"
